services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: EL8687NBD8696
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - fidzen-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0.17
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db
    networks:
      - fidzen-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand({ ping: 1 })' | mongo --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend  # Chemin corrig√© vers le dossier backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:EL8687NBD8696@postgres:5432/postgres"
      MONGO_URI: "mongodb://root:rootpassword@mongo:27017/fidzen?authSource=admin"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - fidzen-network

volumes:
  pgdata:
  mongodbdata:

networks:
  fidzen-network:
    driver: bridge
