// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  password       String
  name           String
  creationDate   DateTime        @default(now())
  lastConnect    DateTime?

  fidelityCards  FidelityCard[]  // Relation avec les cartes de fidélité
  receipts       Receipt[]       @relation("UserReceipts") // Relation avec les tickets de caisse
}

model FidelityCard {
  id         String       @id @default(uuid())
  userId     String
  storeName  String
  cardNumber String
  dateAdd    DateTime     @default(now())

  user       User         @relation(fields: [userId], references: [id]) // Relation avec l'utilisateur
  receipts   Receipt[]    // Relation avec les tickets de caisse
}

model Receipt {
  id             String   @id @default(uuid())
  fidelityCardId String
  userId         String?  // Ajouté pour la relation avec User
  purchaseDate   DateTime @default(now())
  totalCost      Float
  purchaseDetails String

  fidelityCard   FidelityCard @relation(fields: [fidelityCardId], references: [id], map: "Receipt_fidelityCard_relation") // Relation avec la carte de fidélité
  products       Product[]    // Relation avec les produits achetés
  user           User?        @relation("UserReceipts", fields: [userId], references: [id]) // Relation opposée avec User
}

model Product {
  id             String  @id @default(uuid())
  receiptId      String?
  productName    String
  codeProduct    String
  price          Float
  quantity       Int

  receipt        Receipt? @relation(fields: [receiptId], references: [id]) // Relation avec le ticket de caisse
  productRecalls Product_ProductRecall[] // Relation avec les rappels produits
}

model ProductRecall {
  id          String  @id @default(uuid())
  codeProduct String  @unique
  recallDate  DateTime
  recallReason String

  productRecalls Product_ProductRecall[] // Relation avec la table de jointure pour les produits
}

model Product_ProductRecall {
  id              String         @id @default(uuid())
  productId       String
  productRecallId String

  product         Product        @relation(fields: [productId], references: [id], map: "ProductRecall_Product_relation")
  productRecall   ProductRecall  @relation(fields: [productRecallId], references: [id], map: "ProductRecall_ProductRecall_relation")
}
